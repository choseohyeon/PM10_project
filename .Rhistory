return((1/sigma)*exp(-(x-mu)/sigma)*
exp(-exp(-(x-mu)/sigma)))
}
g <- function(x,mu,sigma){
return(-(1/n)*sum(log(f(x,mu,sigma))))
}
g_diff_mu <- function(x,mu,sigma){
n <- length(x)
return(-(1/n)*sum(((1/sigma) - (1/sigma) * exp(-(x-mu)/sigma))))
}
g_diff_sigma <- function(x,mu,sigma){
n <- length(x)
return(-(sum(((1 - exp(-((x-mu)/sigma))) * (x-mu)/sigma - 1)/sigma)/n))
}
gradg <- function(x,mu,sigma){
return(c(g_diff_mu(x,mu,sigma),g_diff_sigma(x,mu,sigma)))
}
mu <- sigma <- Inf
mu.new <- mu_hat; sigma.new <- sigma_hat
n <- length(daily)
while((abs(mu.new-mu)+abs(sigma.new-sigma))>=1e-05){
eta <- 1
mu <- mu.new;sigma <- sigma.new
new <- c(mu,sigma)-eta*gradg(daily,mu,sigma)
mu.new <- new[1];sigma.new <- new[2]
while(g(daily,mu.new,sigma.new)>g(daily,mu,sigma)){
eta <- eta*0.5
new <- c(mu,sigma)-eta*gradg(daily,mu,sigma)
mu.new <- new[1];sigma.new <- new[2]
}
}
c(mu.new,sigma.new)
daily <- daily_max_pm10$max_pm10
daily
f <- function(x,mu,sigma){
return((1/sigma)*exp(-(x-mu)/sigma)*
exp(-exp(-(x-mu)/sigma)))
}
hist(daily_max_pm10$max_pm10,prob=TRUE)
# 그래프 그리기
x <- seq(0,800,by=1.)
y1 <- f(x,mu_hat,sigma_hat)  # 확률밀도함수 계산
y2 <- f(x,mu.new,sigma.new)
lines(x, y1, type="l", col="blue", xlab="x", ylab="Density", main="Probability Density Function")
lines(x, y2, type="l", col="red", xlab="x", ylab="Density", main="Probability Density Function")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
pm10 <- data.frame(NULL)
for (year in 2009:2022) {
file_path <- paste0("C:/Users/Samsung/Desktop/PM10/",year,".csv")
data <- read.csv(file_path, fileEncoding='euc-kr')
data <- data[,3:4]
pm10 <- rbind(pm10, data)
}
pm10
pm10 <- data.frame(NULL)
for (year in 2009:2022) {
file_path <- paste0("C:/Users/Samsung/Desktop/PM10/",year,".csv")
data <- read.csv(file_path, fileEncoding='euc-kr')
data <- data[,3:4]
pm10 <- rbind(pm10, data)
}
pm10
df <- pm10 %>%
separate(일시, c("Year", "Month", "Time"), "-") %>%
separate(Time,c("Date","Time")," ") %>%
filter(Month %in% c('03','04','05')) %>%
unite(일시,Year,Month,Date,sep="-")
df
daily_max_pm10 <- df %>%
mutate(일시=as.Date(일시),
X1시간평균.미세먼지농도.....=as.numeric(X1시간평균.미세먼지농도.....))%>%
group_by(일시) %>%
summarise(max_pm10=max(X1시간평균.미세먼지농도.....,na.rm=TRUE))
daily_max_pm10
pm10 <- data.frame()
for (year in 2009:2022) {
file_path <- paste0("C:/Users/Samsung/Desktop/PM10/",year,".csv")
data <- read.csv(file_path, fileEncoding='euc-kr')
data <- data[,3:4]
pm10 <- rbind(pm10, data)
}
pm10
df <- pm10 %>%
separate(일시, c("Year", "Month", "Time"), "-") %>%
separate(Time,c("Date","Time")," ") %>%
filter(Month %in% c('03','04','05')) %>%
unite(일시,Year,Month,Date,sep="-") %>%
filter(!is.na(X1시간평균.미세먼지농도.....))
df
daily_max_pm10 <- df %>%
mutate(일시=as.Date(일시),
X1시간평균.미세먼지농도.....=as.numeric(X1시간평균.미세먼지농도.....)) %>%
group_by(일시) %>%
summarise(max_pm10=max(X1시간평균.미세먼지농도.....,na.rm=TRUE))
daily_max_pm10
daily_max_pm10 %>% summary(daily_max_pm10)
daily_max_pm10 %>%
summarise(mean_max=mean(max_pm10),
var_max=var(max_pm10),
sd_max=sd(max_pm10))
hist(daily_max_pm10$max_pm10)
boxplot(daily_max_pm10$max_pm10)
pm10 <- data.frame()
for (year in 2009:2022) {
file_path <- paste0("C:/Users/Samsung/Desktop/PM10/",year,".csv")
data <- read.csv(file_path, fileEncoding='euc-kr')
data <- data[,3:4]
pm10 <- rbind(pm10, data)
}
pm10
df <- pm10 %>%
separate(일시, c("Year", "Month", "Time"), "-") %>%
separate(Time,c("Date","Time")," ") %>%
filter(Month %in% c('03','04','05')) %>%
unite(일시,Year,Month,Date,sep="-") %>%
filter(!is.na(X1시간평균.미세먼지농도.....))
df
daily_max_pm10 <- df %>%
mutate(일시=as.Date(일시),
X1시간평균.미세먼지농도.....=as.numeric(X1시간평균.미세먼지농도.....)) %>%
group_by(일시) %>%
summarise(max_pm10=max(X1시간평균.미세먼지농도.....,na.rm=TRUE))
daily_max_pm10
daily_max_pm10 %>% summary(daily_max_pm10)
daily_max_pm10 %>%
summarise(mean_max=mean(max_pm10),
var_max=var(max_pm10),
sd_max=sd(max_pm10))
hist(daily_max_pm10$max_pm10)
boxplot(daily_max_pm10$max_pm10)
pm10 <- data.frame()
for (year in 2009:2022) {
file_path <- paste0("C:/Users/Samsung/Desktop/PM10/",year,".csv")
data <- read.csv(file_path, fileEncoding='euc-kr')
data <- data[,3:4]
pm10 <- rbind(pm10, data)
}
pm10
df <- pm10 %>%
separate(일시, c("Year", "Month", "Time"), "-") %>%
separate(Time,c("Date","Time")," ") %>%
filter(Month %in% c('03','04','05')) %>%
unite(일시,Year,Month,Date,sep="-") %>%
filter(!is.na(X1시간평균.미세먼지농도.....))
df
daily_max_pm10 <- df %>%
mutate(일시=as.Date(일시),
X1시간평균.미세먼지농도.....=as.numeric(X1시간평균.미세먼지농도.....)) %>%
group_by(일시) %>%
summarise(max_pm10=max(X1시간평균.미세먼지농도.....,na.rm=TRUE))
daily_max_pm10
daily_max_pm10 %>% summary(daily_max_pm10)
daily_max_pm10 %>%
summarise(mean_max=mean(max_pm10),
var_max=var(max_pm10),
sd_max=sd(max_pm10))
hist(daily_max_pm10$max_pm10)
boxplot(daily_max_pm10$max_pm10)
standard_var=var(daily_max_pm10$max_pm10)
median=median(daily_max_pm10$max_pm10)
sigma_hat=sqrt(standard_var*6/(pi^2))
sigma_hat
mu_hat=median+(sigma_hat*log(log(2)))
mu_hat
daily <- daily_max_pm10$max_pm10
head(daily)
f <- function(x,mu,sigma){
return((1/sigma)*exp(-(x-mu)/sigma)*
exp(-exp(-(x-mu)/sigma)))
}
g <- function(x,mu,sigma){
return(-(1/n)*sum(log(f(x,mu,sigma))))
}
g_diff_mu <- function(x,mu,sigma){
n <- length(x)
return(-(1/n)*sum(((1/sigma) - (1/sigma) * exp(-(x-mu)/sigma))))
}
g_diff_sigma <- function(x,mu,sigma){
n <- length(x)
return(-(sum(((1 - exp(-((x-mu)/sigma))) * (x-mu)/sigma - 1)/sigma)/n))
}
gradg <- function(x,mu,sigma){
return(c(g_diff_mu(x,mu,sigma),g_diff_sigma(x,mu,sigma)))
}
daily <- daily_max_pm10$max_pm10
head(daily)
f <- function(x,mu,sigma){
return((1/sigma)*exp(-(x-mu)/sigma)*
exp(-exp(-(x-mu)/sigma)))
}
g <- function(x,mu,sigma){
return(-(1/n)*sum(log(f(x,mu,sigma))))
}
g_diff_mu <- function(x,mu,sigma){
n <- length(x)
return(-(1/n)*sum(((1/sigma) - (1/sigma) * exp(-(x-mu)/sigma))))
}
g_diff_sigma <- function(x,mu,sigma){
n <- length(x)
return(-(sum(((1 - exp(-((x-mu)/sigma))) * (x-mu)/sigma - 1)/sigma)/n))
}
gradg <- function(x,mu,sigma){
return(c(g_diff_mu(x,mu,sigma),g_diff_sigma(x,mu,sigma)))
}
mu <- sigma <- Inf
mu.new <- mu_hat; sigma.new <- sigma_hat
n <- length(daily)
while((abs(mu.new-mu)+abs(sigma.new-sigma))>=1e-05){
eta <- 1
mu <- mu.new;sigma <- sigma.new
new <- c(mu,sigma)-eta*gradg(daily,mu,sigma)
mu.new <- new[1];sigma.new <- new[2]
while(g(daily,mu.new,sigma.new)>g(daily,mu,sigma)){
eta <- eta*0.5
new <- c(mu,sigma)-eta*gradg(daily,mu,sigma)
mu.new <- new[1];sigma.new <- new[2]
}
}
c(mu.new,sigma.new)
daily <- daily_max_pm10$max_pm10
daily
f <- function(x,mu,sigma){
return((1/sigma)*exp(-(x-mu)/sigma)*
exp(-exp(-(x-mu)/sigma)))
}
hist(daily_max_pm10$max_pm10,prob=TRUE)
# 그래프 그리기
x <- seq(0,800,by=1.)
y1 <- f(x,mu_hat,sigma_hat)  # 확률밀도함수 계산
y2 <- f(x,mu.new,sigma.new)
lines(x, y1, type="l", col="blue", xlab="x", ylab="Density", main="Probability Density Function")
lines(x, y2, type="l", col="red", xlab="x", ylab="Density", main="Probability Density Function")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
pm10 <- data.frame(NULL)
for (year in 2009:2022) {
file_path <- paste0("C:/Users/Samsung/Desktop/PM10/",year,".csv")
data <- read.csv(file_path, fileEncoding='euc-kr')
data <- data[,3:4]
pm10 <- rbind(pm10, data)
}
pm10
pm10 <- data.frame(NULL)
for (year in 2009:2022) {
file_path <- paste0("C:/Users/Samsung/Desktop/PM10/",year,".csv")
data <- read.csv(file_path, fileEncoding='euc-kr')
data <- data[,3:4]
pm10 <- rbind(pm10, data)
}
pm10
df <- pm10 %>%
separate(일시, c("Year", "Month", "Time"), "-") %>%
separate(Time,c("Date","Time")," ") %>%
filter(Month %in% c('03','04','05')) %>%
unite(일시,Year,Month,Date,sep="-")
df
daily_max_pm10 <- df %>%
mutate(일시=as.Date(일시),
X1시간평균.미세먼지농도.....=as.numeric(X1시간평균.미세먼지농도.....))%>%
group_by(일시) %>%
summarise(max_pm10=max(X1시간평균.미세먼지농도.....,na.rm=TRUE))
daily_max_pm10
pm10 <- data.frame()
for (year in 2009:2022) {
file_path <- paste0("C:/Users/Samsung/Desktop/PM10/",year,".csv")
data <- read.csv(file_path, fileEncoding='euc-kr')
data <- data[,3:4]
pm10 <- rbind(pm10, data)
}
pm10
df <- pm10 %>%
separate(일시, c("Year", "Month", "Time"), "-") %>%
separate(Time,c("Date","Time")," ") %>%
filter(Month %in% c('03','04','05')) %>%
unite(일시,Year,Month,Date,sep="-") %>%
filter(!is.na(X1시간평균.미세먼지농도.....))
df
daily_max_pm10 <- df %>%
mutate(일시=as.Date(일시),
X1시간평균.미세먼지농도.....=as.numeric(X1시간평균.미세먼지농도.....)) %>%
group_by(일시) %>%
summarise(max_pm10=max(X1시간평균.미세먼지농도.....,na.rm=TRUE))
daily_max_pm10
daily_max_pm10 %>% summary(daily_max_pm10)
daily_max_pm10 %>%
summarise(mean_max=mean(max_pm10),
var_max=var(max_pm10),
sd_max=sd(max_pm10))
hist(daily_max_pm10$max_pm10)
boxplot(daily_max_pm10$max_pm10)
pm10 <- data.frame()
for (year in 2009:2022) {
file_path <- paste0("C:/Users/Samsung/Desktop/PM10/",year,".csv")
data <- read.csv(file_path, fileEncoding='euc-kr')
data <- data[,3:4]
pm10 <- rbind(pm10, data)
}
pm10
df <- pm10 %>%
separate(일시, c("Year", "Month", "Time"), "-") %>%
separate(Time,c("Date","Time")," ") %>%
filter(Month %in% c('03','04','05')) %>%
unite(일시,Year,Month,Date,sep="-") %>%
filter(!is.na(X1시간평균.미세먼지농도.....))
df
daily_max_pm10 <- df %>%
mutate(일시=as.Date(일시),
X1시간평균.미세먼지농도.....=as.numeric(X1시간평균.미세먼지농도.....)) %>%
group_by(일시) %>%
summarise(max_pm10=max(X1시간평균.미세먼지농도.....,na.rm=TRUE))
daily_max_pm10
daily_max_pm10 %>% summary(daily_max_pm10)
daily_max_pm10 %>%
summarise(mean_max=mean(max_pm10),
var_max=var(max_pm10),
sd_max=sd(max_pm10))
hist(daily_max_pm10$max_pm10)
boxplot(daily_max_pm10$max_pm10)
standard_var=var(daily_max_pm10$max_pm10)
median=median(daily_max_pm10$max_pm10)
sigma_hat=sqrt(standard_var*6/(pi^2))
sigma_hat
mu_hat=median+(sigma_hat*log(log(2)))
mu_hat
daily <- daily_max_pm10$max_pm10
head(daily)
f <- function(x,mu,sigma){
return((1/sigma)*exp(-(x-mu)/sigma)*
exp(-exp(-(x-mu)/sigma)))
}
g <- function(x,mu,sigma){
return(-(1/n)*sum(log(f(x,mu,sigma))))
}
g_diff_mu <- function(x,mu,sigma){
n <- length(x)
return(-(1/n)*sum(((1/sigma) - (1/sigma) * exp(-(x-mu)/sigma))))
}
g_diff_sigma <- function(x,mu,sigma){
n <- length(x)
return(-(sum(((1 - exp(-((x-mu)/sigma))) * (x-mu)/sigma - 1)/sigma)/n))
}
gradg <- function(x,mu,sigma){
return(c(g_diff_mu(x,mu,sigma),g_diff_sigma(x,mu,sigma)))
}
daily <- daily_max_pm10$max_pm10
head(daily)
f <- function(x,mu,sigma){
return((1/sigma)*exp(-(x-mu)/sigma)*
exp(-exp(-(x-mu)/sigma)))
}
g <- function(x,mu,sigma){
return(-(1/n)*sum(log(f(x,mu,sigma))))
}
g_diff_mu <- function(x,mu,sigma){
n <- length(x)
return(-(1/n)*sum(((1/sigma) - (1/sigma) * exp(-(x-mu)/sigma))))
}
g_diff_sigma <- function(x,mu,sigma){
n <- length(x)
return(-(sum(((1 - exp(-((x-mu)/sigma))) * (x-mu)/sigma - 1)/sigma)/n))
}
gradg <- function(x,mu,sigma){
return(c(g_diff_mu(x,mu,sigma),g_diff_sigma(x,mu,sigma)))
}
mu <- sigma <- Inf
mu.new <- mu_hat; sigma.new <- sigma_hat
n <- length(daily)
while((abs(mu.new-mu)+abs(sigma.new-sigma))>=1e-05){
eta <- 1
mu <- mu.new;sigma <- sigma.new
new <- c(mu,sigma)-eta*gradg(daily,mu,sigma)
mu.new <- new[1];sigma.new <- new[2]
while(g(daily,mu.new,sigma.new)>g(daily,mu,sigma)){
eta <- eta*0.5
new <- c(mu,sigma)-eta*gradg(daily,mu,sigma)
mu.new <- new[1];sigma.new <- new[2]
}
}
c(mu.new,sigma.new)
daily <- daily_max_pm10$max_pm10
daily
f <- function(x,mu,sigma){
return((1/sigma)*exp(-(x-mu)/sigma)*
exp(-exp(-(x-mu)/sigma)))
}
hist(daily_max_pm10$max_pm10,prob=TRUE)
# 그래프 그리기
x <- seq(0,800,by=1.)
y1 <- f(x,mu_hat,sigma_hat)  # 확률밀도함수 계산
y2 <- f(x,mu.new,sigma.new)
lines(x, y1, type="l", col="blue", xlab="x", ylab="Density", main="Probability Density Function")
lines(x, y2, type="l", col="red", xlab="x", ylab="Density", main="Probability Density Function")
library(tidyverse)
pm10 <- data.frame(NULL)
for (year in 2009:2022) {
file_path <- paste0(year,".csv")
data <- read.csv(file_path, fileEncoding='euc-kr')
data <- data[,3:4]
pm10 <- rbind(pm10, data)
}
pm10
pm10 <- data.frame(NULL)
for (year in 2009:2022) {
file_path <- paste0(year,".csv")
data <- read.csv(file_path, fileEncoding='euc-kr')
data <- data[,3:4]
pm10 <- rbind(pm10, data)
}
pm10
```{r}
pm10 <- data.frame(NULL)
for (year in 2009:2022) {
file_path <- paste0("C:/Users/Samsung/Desktop/PM10/",year,".csv")
data <- read.csv(file_path, fileEncoding='euc-kr')
data <- data[,3:4]
pm10 <- rbind(pm10, data)
}
```{r}
```{r }
```{r}
pm10 <- data.frame(NULL)
for (year in 2009:2022) {
file_path <- paste0("C:/Users/Samsung/Desktop/PM10/",year,".csv")
data <- read.csv(file_path, fileEncoding='euc-kr')
data <- data[,3:4]
pm10 <- rbind(pm10, data)
}
pm10
df <- pm10 %>%
separate(일시, c("Year", "Month", "Time"), "-") %>%
separate(Time,c("Date","Time")," ") %>%
filter(Month %in% c('03','04','05')) %>%
unite(일시,Year,Month,Date,sep="-")
df <- pm10 %>%
separate(일시, c("Year", "Month", "Time"), "-") %>%
separate(Time,c("Date","Time")," ") %>%
filter(Month %in% c('03','04','05')) %>%
unite(일시,Year,Month,Date,sep="-")
df
df <- pm10 %>%
separate(일시, c("Year", "Month", "Time"), "-") %>%
separate(Time,c("Date","Time")," ") %>%
filter(Month %in% c('03','04','05')) %>%
unite(일시,Year,Month,Date,sep="-")
df
daily_max_pm10 <- df %>%
mutate(일시=as.Date(일시),
X1시간평균.미세먼지농도.....=as.numeric(X1시간평균.미세먼지농도.....))%>%
group_by(일시) %>%
summarise(max_pm10=max(X1시간평균.미세먼지농도.....,na.rm=TRUE))
daily_max_pm10 <- df %>%
mutate(일시=as.Date(일시),
X1시간평균.미세먼지농도.....=as.numeric(X1시간평균.미세먼지농도.....))%>%
group_by(일시) %>%
summarise(max_pm10=max(X1시간평균.미세먼지농도.....,na.rm=TRUE))
daily_max_pm10
pm10 <- data.frame()
```{r}
df <- pm10 %>%
separate(일시, c("Year", "Month", "Time"), "-") %>%
separate(Time,c("Date","Time")," ") %>%
filter(Month %in% c('03','04','05')) %>%
unite(일시,Year,Month,Date,sep="-")
pm10 <- data.frame()
for (year in 2009:2022) {
file_path <- paste0("C:/Users/Samsung/Desktop/PM10/",year,".csv")
data <- read.csv(file_path, fileEncoding='euc-kr')
data <- data[,3:4]
pm10 <- rbind(pm10, data)
}
pm10
df <- pm10 %>%
separate(일시, c("Year", "Month", "Time"), "-") %>%
separate(Time,c("Date","Time")," ") %>%
filter(Month %in% c('03','04','05')) %>%
unite(일시,Year,Month,Date,sep="-")
df
daily_max_pm10 <- df %>%
mutate(일시=as.Date(일시),
X1시간평균.미세먼지농도.....=as.numeric(X1시간평균.미세먼지농도.....))%>%
group_by(일시) %>%
summarise(max_pm10=max(X1시간평균.미세먼지농도.....,na.rm=TRUE))
daily_max_pm10
knitr::opts_chunk$set(echo = TRUE)
![alt text here](path-to-image-here)
data(cars)
head(cars)
summary(cars)
```{r iris_name}
data(iris)
summary(iris)
data(iris)
summary(iris)
```{r iris_name2}
1+2
1+2
- `echo`: 코드를 결과물에서 숨긴다.
```{r, echo=FALSE}
plot(iris$Sepal.Length, iris$Sepal.Width)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
pm10 <- data.frame(NULL)
for (year in 2009:2022) {
file_path <- paste0(year,".csv")
data <- read.csv(file_path, fileEncoding='euc-kr')
data <- data[,3:4]
pm10 <- rbind(pm10, data)
}
pm10
